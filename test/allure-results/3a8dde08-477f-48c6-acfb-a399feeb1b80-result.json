{"name": "test_selene", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('xpath', './/*[text()[contains(normalize-space(.), concat(\"\", \"76\"))]]')).is visible\n\nReason: ConditionNotMatchedError: condition not matched\nScreenshot: file:///home/user/.selene/screenshots/1658096479080/1658096479081.png\nPageSource: file:///home/user/.selene/screenshots/1658096479080/1658096479081.html", "trace": "self = <selene.core.wait.Wait object at 0x7f5024515970>\nfn = <selene.core.conditions.ElementCondition object at 0x7f5024bd3eb0>\n\n    def for_(self, fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self._entity)\n\n../../.local/lib/python3.8/site-packages/selene/core/wait.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.conditions.ElementCondition object at 0x7f5024bd3eb0>\nentity = <selene.core.entity.Element object at 0x7f50246cc5b0>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\n../../.local/lib/python3.8/site-packages/selene/core/condition.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = <selene.core.entity.Element object at 0x7f50246cc5b0>\n\n    def fn(entity: E) -> None:\n        if not predicate(entity):\n>           raise ConditionNotMatchedError()\nE           selene.core.exceptions.ConditionNotMatchedError: condition not matched\n\n../../.local/lib/python3.8/site-packages/selene/core/condition.py:98: ConditionNotMatchedError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_selene():\n        \"\"\"\n         Чистый Selene (без шагов)\n        \"\"\"\n        browser.open(URL).driver.set_window_rect(width=1920, height=1080)\n        s(LocatorsPageGitHub.SEARCH_ELEMENT).click()\n        s(LocatorsPageGitHub.SEARCH_ELEMENT).send_keys(REPOSITORY_NAME)\n        s(LocatorsPageGitHub.SEARCH_ELEMENT).submit()\n        s(by.link_text(REPOSITORY_NAME)).click()\n        s(LocatorsPageGitHub.ISSUE_TAB).click()\n>       s(by.partial_text(LocatorsPageGitHub.ISSUE_VALUE)).should(be.visible)\n\ntest_github.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../.local/lib/python3.8/site-packages/selene/core/entity.py:539: in should\n    super().should(condition)\n../../.local/lib/python3.8/site-packages/selene/core/entity.py:126: in should\n    self.wait.for_(condition)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selene.core.wait.Wait object at 0x7f5024515970>\nfn = <selene.core.conditions.ElementCondition object at 0x7f5024bd3eb0>\n\n        def for_(self, fn: Callable[[E], R]) -> R:\n            finish_time = time.time() + self._timeout\n    \n            while True:\n                try:\n                    return fn(self._entity)\n                except Exception as reason:\n                    if time.time() > finish_time:\n    \n                        reason_message = str(reason)\n    \n                        reason_string = '{name}: {message}'.format(\n                            name=reason.__class__.__name__, message=reason_message\n                        )\n                        # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                        # stacktrace = getattr(reason, 'stacktrace', None)\n                        timeout = self._timeout\n                        entity = self._entity\n    \n                        failure = TimeoutException(\n                            f'''\n    \n    Timed out after {timeout}s, while waiting for:\n    {entity}.{fn}\n    \n    Reason: {reason_string}'''\n                        )\n    \n>                       raise self._hook_failure(failure)\nE                       selene.core.exceptions.TimeoutException: Message: \nE                       \nE                       Timed out after 4s, while waiting for:\nE                       browser.element(('xpath', './/*[text()[contains(normalize-space(.), concat(\"\", \"76\"))]]')).is visible\nE                       \nE                       Reason: ConditionNotMatchedError: condition not matched\nE                       Screenshot: file:///home/user/.selene/screenshots/1658096479080/1658096479081.png\nE                       PageSource: file:///home/user/.selene/screenshots/1658096479080/1658096479081.html\n\n../../.local/lib/python3.8/site-packages/selene/core/wait.py:125: TimeoutException"}, "description": "\n     Чистый Selene (без шагов)\n    ", "attachments": [{"name": "log", "source": "741a42f7-63a0-42cc-ac56-ed2bd360676f-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "0fab0961-0d12-4657-8f53-7cefeb3022b0-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "483e5284-fa17-45f9-8e9b-611e7012b851-attachment.txt", "type": "text/plain"}], "start": 1658096479159, "stop": 1658096490268, "uuid": "8baefe0c-9114-4030-b90f-1b985c76fb90", "historyId": "239a2e603184735cc99ddb8637382ff1", "testCaseId": "2580cf5145fdd0e83c89306739328b6d", "fullName": "test_github#test_selene", "labels": [{"name": "suite", "value": "test_github"}, {"name": "host", "value": "user-HP-ProBook-430-G7"}, {"name": "thread", "value": "1076248-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_github"}]}